<domain log-root="${com.sun.aas.instanceRoot}/logs" application-root="${com.sun.aas.instanceRoot}/applications" version="10.0">
    <hazelcast-runtime-configuration multicast-group="224.2.2.4" multicast-port="2904" generate-names="true" start-port="6900"></hazelcast-runtime-configuration>
    <security-configurations>
        <authorization-service default="true" name="authorizationService">
            <security-provider name="simpleAuthorization" type="Simple" provider-name="simpleAuthorizationProvider">
                <authorization-provider-config support-policy-deploy="false" name="simpleAuthorizationProviderConfig"></authorization-provider-config>
            </security-provider>
        </authorization-service>
    </security-configurations>
    <system-applications />
    <applications />
    <resources>
        <jdbc-connection-pool datasource-classname="org.mariadb.jdbc.MariaDbDataSource" name="gpspu" res-type="javax.sql.ConnectionPoolDataSource">
            <property name="Password" value="SmlzVciafkeQ"></property>
            <property name="User" value="admin"></property>
            <property name="URL" value="jdbc:mysql://35.192.12.153:3306/gps_tracker"></property>
        </jdbc-connection-pool>
        <jdbc-resource pool-name="gpspu" jndi-name="jdbc/gps-tracker-api"></jdbc-resource>
    </resources>
    <servers>
        <server name="server" config-ref="server-config">
            <resource-ref ref="jdbc/gps-tracker-api"></resource-ref>
        </server>
    </servers>
    <configs>
        <config name="server-config">
            <payara-executor-service-configuration/>
            <cdi-service enable-concurrent-deployment="true" pre-loader-thread-pool-size="2"></cdi-service>
            <hazelcast-config-specific-configuration enabled="true"></hazelcast-config-specific-configuration>
            <health-check-service-configuration enabled="true">
                <log-notifier enabled="true"/>
                <eventbus-notifier enabled="false"/>
                <cpu-usage-checker unit="MINUTES" name="CPU" time="1" enabled="true" />
                <machine-memory-usage-checker unit="MINUTES" name="MMEM" time="3" enabled="true" />
                <heap-memory-usage-checker unit="MINUTES" name="HEAP" time="3" enabled="true" />
                <hogging-threads-checker unit="MINUTES" name="HT" time="5" enabled="true" />
                <garbage-collector-checker unit="MINUTES" name="GC" time="5" enabled="true" />
            </health-check-service-configuration>
            <http-service access-logging-enabled="true">
                <access-log format="%client.name% %auth-user-name% %datetime% %request% %status% %response.length%" rotation-interval-in-minutes="15" rotation-suffix="yyyy-MM-dd"></access-log>
                <virtual-server id="server" access-logging-enabled="false" access-log="" network-listeners="http-listener, https-listener"></virtual-server>
            </http-service>
            <iiop-service>
                <orb use-thread-pool-ids="thread-pool-1"></orb>
                <iiop-listener id="orb-listener-1" enabled="false" address="0.0.0.0"></iiop-listener>
            </iiop-service>
            <admin-service system-jmx-connector-name="system" type="das-and-server">
                <jmx-connector port="8686" address="0.0.0.0" security-enabled="false" auth-realm-name="admin-realm" name="system" enabled="false"></jmx-connector>
                <das-config></das-config>
            </admin-service>
            <connector-service class-loading-policy="global" shutdown-timeout-in-seconds="30"></connector-service>
            <ejb-container steady-pool-size="0" max-pool-size="32" session-store="${com.sun.aas.instanceRoot}/session-store" pool-resize-quantity="8">
                <ejb-timer-service ejb-timer-service="DataGrid"></ejb-timer-service>
            </ejb-container>
            <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
                <module-log-levels />
            </log-service>
            <monitoring-service-configuration amx="false" enabled="false" log-frequency="30">
                <log-notifier></log-notifier>
                <eventbus-notifier></eventbus-notifier>
            </monitoring-service-configuration>
            <microprofile-metrics-configuration></microprofile-metrics-configuration>
            <security-service activate-default-principal-to-role-mapping="true" jacc="simple">
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
                    <property value="${com.sun.aas.instanceRoot}/config/admin-keyfile" name="file" />
                    <property value="fileRealm" name="jaas-context" />
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
                    <property value="${com.sun.aas.instanceRoot}/config/keyfile" name="file" />
                    <property value="fileRealm" name="jaas-context" />
                </auth-realm>
                <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate" />
                <jacc-provider policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl" policy-provider="com.sun.enterprise.security.provider.PolicyWrapper" name="default">
                    <property value="${com.sun.aas.instanceRoot}/generated/policy" name="repository" />
                </jacc-provider>
                <jacc-provider policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider" name="simple" />
                <audit-module classname="com.sun.enterprise.security.ee.Audit" name="default">
                    <property value="false" name="auditOn" />
                </audit-module>
                <message-security-config auth-layer="SOAP">
                    <provider-config provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-type="client">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property value="s1as" name="encryption.key.alias" />
                        <property value="s1as" name="signature.key.alias" />
                        <property value="false" name="dynamic.username.password" />
                        <property value="false" name="debug" />
                    </provider-config>
                    <provider-config provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-type="client">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property value="s1as" name="encryption.key.alias" />
                        <property value="s1as" name="signature.key.alias" />
                        <property value="false" name="dynamic.username.password" />
                        <property value="false" name="debug" />
                        <property value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" name="security.config" />
                    </provider-config>
                    <provider-config provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-type="server">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property value="s1as" name="encryption.key.alias" />
                        <property value="s1as" name="signature.key.alias" />
                        <property value="false" name="debug" />
                    </provider-config>
                    <provider-config provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-type="server">
                        <request-policy auth-source="content" />
                        <response-policy auth-source="content" />
                        <property value="s1as" name="encryption.key.alias" />
                        <property value="s1as" name="signature.key.alias" />
                        <property value="false" name="debug" />
                        <property value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml" name="security.config" />
                    </provider-config>
                </message-security-config>
                <property value="SHA-256" name="default-digest-algorithm" />
            </security-service>
            <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"></transaction-service>
            <java-config></java-config>
            <phone-home-runtime-configuration></phone-home-runtime-configuration>
            <request-tracing-service-configuration>
                <log-notifier enabled="true"></log-notifier>
            </request-tracing-service-configuration>
            <notification-service-configuration enabled="false">
                <log-notifier-configuration enabled="true"></log-notifier-configuration>
                <eventbus-notifier-configuration enabled="false"></eventbus-notifier-configuration>
            </notification-service-configuration>
            <batch-runtime-configuration table-prefix="jbatch" data-source-lookup-name="jdbc/__default"></batch-runtime-configuration>
            <availability-service availability-enabled="true">
                <web-container-availability availability-enabled="true" persistence-scope="modified-session" sso-failover-enabled="true" persistence-type="hazelcast"></web-container-availability>
                <ejb-container-availability sfsb-ha-persistence-type="hazelcast" sfsb-persistence-type="hazelcast"></ejb-container-availability>
            </availability-service>
            <network-config>
                <protocols>
                    <protocol name="http-listener">
                        <http default-virtual-server="server" xpowered-by="false" max-connections="250" comet-support-enabled="true">
                            <file-cache enabled="false"></file-cache>
                        </http>
                    </protocol>
                    <protocol security-enabled="true" name="https-listener">
                        <http default-virtual-server="server" xpowered-by="false" comet-support-enabled="true" max-connections="250">
                            <file-cache enabled="false"></file-cache>
                        </http>
                        <ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl" ssl3-enabled="false" cert-nickname="s1as"></ssl>
                    </protocol>
                </protocols>
                <network-listeners>
                    <network-listener port="8080" protocol="http-listener" transport="tcp" name="http-listener" thread-pool="http-thread-pool" enabled="true" />
                    <network-listener port="8443" protocol="https-listener" transport="tcp" name="https-listener" thread-pool="http-thread-pool" enabled="false" />
                </network-listeners>
                <transports>
                    <transport byte-buffer-type="HEAP" name="tcp"></transport>
                </transports>
            </network-config>
            <thread-pools>
                <thread-pool name="http-thread-pool" min-thread-pool-size="2" max-thread-pool-size="200" max-queue-size="4096"></thread-pool>
                <thread-pool name="thread-pool-1" min-thread-pool-size="2" max-thread-pool-size="200"/>
            </thread-pools>
            <microprofile-config/>
            <system-property name="jersey.config.client.readTimeout" value="300000"/>
            <system-property name="jersey.config.client.connectTimeout" value="300000"/>
        </config>
    </configs>
    <property name="administrative.domain.name" value="domain1"/>
</domain>
